/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.37
 * Generated at: 2016-10-31 14:33:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class products_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Table styles -->\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td{\r\n");
      out.write(" \r\n");
      out.write(" border:1px solid black;\r\n");
      out.write("font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif; } \r\n");
      out.write(" \r\n");
      out.write(" th,td{\r\n");
      out.write(" border-bottom:1px solid #ddd;\r\n");
      out.write(" }\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" table{\r\n");
      out.write(" width:100%;\r\n");
      out.write(" }\r\n");
      out.write(" \r\n");
      out.write(" th{\r\n");
      out.write(" \theight:50px;\r\n");
      out.write(" }\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" th, td{\r\n");
      out.write(" text-align:left;\r\n");
      out.write(" padding:15px;\r\n");
      out.write(" }\r\n");
      out.write(" tr:hover {background-color: #f5f5f5}\r\n");
      out.write(" \r\n");
      out.write(" th {\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("caption {\r\n");
      out.write("    caption-side: bottom;\r\n");
      out.write("    text-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("<!-- End of Table styles -->\r\n");
      out.write("\r\n");
      out.write("<!--  Search Box styles -->\r\n");
      out.write("input[type=\"text\"\"]:before{\r\n");
      out.write("position:relative;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(" #searchBox{\r\n");
      out.write(" padding:20px;\r\n");
      out.write(" }\r\n");
      out.write("<!--  End of Search Box styles -->\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- <div ng-app=\"\">Angular JS\r\n");
      out.write("\t\t\t<input type=\"text\" ng-model=\"name\"/>\r\n");
      out.write("\t\t\t<input type=\"text\" ng-model=\"name\"/>\r\n");
      out.write("\t\t\t<input type=\"text\" ng-model=\"name\"/>\r\n");
      out.write("\t\t\t<h2>{{name}}</h2>\r\n");
      out.write("\t\t</div> -->\r\n");
      out.write("\t\t<div ng-app=\"myApp\" ng-controller=\"customersCtrl\"> \r\n");
      out.write("\r\n");
      out.write("<!-- <table>\r\n");
      out.write("  <tr ng-repeat=\"x in names\">\r\n");
      out.write("    <td>{{ x.Name }}</td>\r\n");
      out.write("    <td>{{ x.Country }}</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table> -->\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group has-feedback\" id=\"searchBox\">\r\n");
      out.write("\r\n");
      out.write("<input type=\"text\" ng-model=\"productSearchString\" class=\"form-control\"\r\n");
      out.write("placeholder=\"Search Products\">\r\n");
      out.write("<span class=\"form-control-feedback\">\r\n");
      out.write("<i id=\"filtersubmit\" class=\"fa fa-search\"></i>\r\n");
      out.write("</span>\r\n");
      out.write("</input>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- <input type=\"text\" ng-model=\"orderBy\" />\r\n");
      out.write(" -->\r\n");
      out.write("<label>Order By</label>\r\n");
      out.write("<select ng-model=\"selected\" ng-init=\"options[0]\" selected=\"options[0]\">  \r\n");
      out.write("  <option value=\"id\" selected>ProductId</option>\r\n");
      out.write("  <option value=\"name\" >Name</option>\r\n");
      out.write("  <option value=\"category\">Category</option>\r\n");
      out.write("  <option value=\"price\">Price</option>\r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("<!-- <div class=\"form-group has-feedback\">   \r\n");
      out.write("    <input type=\"text\" class=\"form-control\">\r\n");
      out.write("    <span class=\"form-control-feedback\">\r\n");
      out.write("        <i class=\"fa fa-search\"></i>\r\n");
      out.write("    </span>\r\n");
      out.write("</div>\r\n");
      out.write(" -->\r\n");
      out.write("<div class=\"table-responsive\">\r\n");
      out.write("<table class=\"table\">\r\n");
      out.write("<caption>Table 1.1 Products</caption>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th>Product Id</th>\r\n");
      out.write("\t<th>Name</th>\r\n");
      out.write("\t<th>Category</th>\r\n");
      out.write("\t<th>Price</th>\r\n");
      out.write("\t<th>Brand</th>\r\n");
      out.write("\t<th>Description</th>\r\n");
      out.write("</tr>\r\n");
      out.write("  <tr ng-repeat=\"x in products | filter:productSearchString | \r\n");
      out.write("  orderBy:selected\">\r\n");
      out.write("    <td>{{ x.id }}</td>\r\n");
      out.write("    <td>{{ x.name }}</td>\r\n");
      out.write("    <td>{{ x.category }}</td>\r\n");
      out.write("    <td>{{ x.price }}</td>\r\n");
      out.write("    <td>{{ x.brand }}</td>\r\n");
      out.write("    <td>{{ x.description}}</td>\r\n");
      out.write("                \r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var app = angular.module('myApp', []);\r\n");
      out.write("app.controller('customersCtrl', function($scope, $http) {\r\n");
      out.write("    $http.get(\"http://www.w3schools.com/angular/customers.php\")\r\n");
      out.write("    //$http.get(\"/ShoppingCartFrontEnd/LoginForm\")\r\n");
      out.write("    .then(function (response) {$scope.names = response.data.records;});\r\n");
      out.write("    $scope.products = products;\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("var products = [\r\n");
      out.write("                {\r\n");
      out.write("                \tid:1,\r\n");
      out.write("                \tname:\"aaaa\",\r\n");
      out.write("                \tcategory:\"xxx\",\r\n");
      out.write("                \tprice:1000,\r\n");
      out.write("                \tbrand:\"xx\",\r\n");
      out.write("                \tdescription:\"xxx\"\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                {\r\n");
      out.write("                \tid:1,\r\n");
      out.write("                \tname:\"xxxx\",\r\n");
      out.write("                \tcategory:\"xxx\",\r\n");
      out.write("                \tprice:3000,\r\n");
      out.write("                \tbrand:\"xx\",\r\n");
      out.write("                \tdescription:\"xxx\"\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                {\r\n");
      out.write("                \tid:1,\r\n");
      out.write("                \tname:\"zzzz\",\r\n");
      out.write("                \tcategory:\"xxx\",\r\n");
      out.write("                \tprice:2000,\r\n");
      out.write("                \tbrand:\"xx\",\r\n");
      out.write("                \tdescription:\"xxx\"\r\n");
      out.write("                },\r\n");
      out.write("                \r\n");
      out.write("                {\r\n");
      out.write("                \tid:1,\r\n");
      out.write("                \tname:\"ffff\",\r\n");
      out.write("                \tcategory:\"xxx\",\r\n");
      out.write("                \tprice:2500,\r\n");
      out.write("                \tbrand:\"xx\",\r\n");
      out.write("                \tdescription:\"xxx\"\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
